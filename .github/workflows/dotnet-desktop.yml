name: Build and deploy ASP.Net Core backend to Azure Web App

env:
  AZURE_WEBAPP_NAME: my-own-supersimple-weather-app  # Your Azure Web App name
  DOTNET_VERSION: '9.0.x'                            # .NET version
  BACKEND_PROJECT_FILE: './backend/backend.csproj'  # Correct path to your backend project

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read
  id-token: write  # Needed for OIDC login if you use Azure login via OIDC

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Debug repo structure
        run: |
          pwd
          ls -R

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Cache NuGet dependencies
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Build backend
        run: dotnet build ${{ env.BACKEND_PROJECT_FILE }} --configuration Release

      - name: Publish backend
        run: dotnet publish ${{ env.BACKEND_PROJECT_FILE }} -c Release -o ${{ env.DOTNET_ROOT }}/myapp

      - name: Upload artifact for deployment
        uses: actions/upload-artifact@v4
        with:
          name: backend-artifact
          path: ${{ env.DOTNET_ROOT }}/myapp

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: backend-artifact

      - name: Azure login via OIDC (recommended)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_MANAGED_IDENTITY_CLIENT_ID }} # Optional if using Managed Identity
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          package: ${{ env.DOTNET_ROOT }}/myapp
